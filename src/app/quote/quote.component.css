h1 {
	color: red;
}

:host {
	display: block;
	border: 1px solid black;
	padding: 10px;
}

/* if there is a class specified within the component we can add additional styling based on a condition. The condition here 
	 is the class that we specify on the component itself in this case: 'favorite' */
/* Other classes can also be chained to the function call: */
:host(.favorite) {
	border: 1px solid red;
}

/* host-context() allows us to apply styling to our component based on the class of any element that is a perent. i.e. this could be an immediate parent, 
	 a higher level parent etc. We can also use id tags or classes of any other type and chain them to the function call as a param. */
:host-context(.boring #very-boring) {
	border: 1px solid gray;
}

/* What is deep? 
	Suppose we wanted to omit the styling for an element that is within the series of children from the current parent.
	- we woould use /deep/ or '>>>' that basically says the styling of type 'h1' should be omitted for all the elements that are children of the current parent.
*/
:host-context(.boring #very-boring) /deep/ h1 {
	color: blue;
}




